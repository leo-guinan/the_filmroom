generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(uuid())
  email             String    @unique
  first_name        String
  last_name         String
  role              String
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  
  coach_sessions    Session[] @relation("CoachSessions")
  client_sessions   Session[] @relation("ClientSessions")
  
  @@map("users")
}

model Session {
  id                          String    @id @default(uuid())
  title                       String
  description                 String?
  scheduled_at                DateTime
  duration_minutes            Int       @default(60)
  status                      String    @default("scheduled")
  
  room_name                   String?   @unique
  room_sid                    String?
  
  recording_url               String?
  recording_s3_key            String?
  recording_egress_id         String?
  recording_status            String?   @default("pending")
  recording_duration_seconds  Int?
  recording_size_bytes        Int?
  recording_started_at        DateTime?
  recording_completed_at      DateTime?
  
  coach_id                    String
  client_id                   String
  
  started_at                  DateTime?
  ended_at                    DateTime?
  actual_duration_minutes     Int?
  
  created_at                  DateTime  @default(now())
  updated_at                  DateTime  @updatedAt
  
  coach                       User      @relation("CoachSessions", fields: [coach_id], references: [id])
  client                      User      @relation("ClientSessions", fields: [client_id], references: [id])
  
  transcription               SessionTranscription?
  insights                    SessionInsight?
  processing_job              ProcessingJob?
  
  @@map("sessions")
}

model SessionTranscription {
  id                          String    @id @default(uuid())
  session_id                  String    @unique
  
  raw_transcription           String
  formatted_transcription     String?
  
  processing_started_at       DateTime?
  processing_completed_at     DateTime?
  processing_duration_seconds Float?
  transcription_engine        String?
  
  speakers                    Json?
  
  created_at                  DateTime  @default(now())
  updated_at                  DateTime  @updatedAt
  
  session                     Session   @relation(fields: [session_id], references: [id])
  
  @@map("session_transcriptions")
}

model SessionInsight {
  id                          String    @id @default(uuid())
  session_id                  String    @unique
  
  summary                     String
  key_topics                  Json?
  action_items                Json?
  
  overall_sentiment           String?
  sentiment_scores            Json?
  emotional_moments           Json?
  
  goals_discussed             Json?
  progress_indicators         Json?
  challenges_identified       Json?
  breakthroughs               Json?
  
  suggested_followups         Json?
  client_engagement_score     Float?
  session_effectiveness_score Float?
  
  ai_model                    String?
  processing_completed_at     DateTime?
  
  created_at                  DateTime  @default(now())
  updated_at                  DateTime  @updatedAt
  
  session                     Session   @relation(fields: [session_id], references: [id])
  
  @@map("session_insights")
}

model ProcessingJob {
  id                String    @id @default(uuid())
  session_id        String    @unique
  job_type          String    // transcription, insights, summary
  status            String    @default("pending") // pending, processing, completed, failed
  
  started_at        DateTime?
  completed_at      DateTime?
  error_message     String?
  
  metadata          Json?
  result            Json?
  
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  
  session           Session   @relation(fields: [session_id], references: [id])
  
  @@map("processing_jobs")
}